apply plugin: 'com.android.application'

def configuration = rootProject.ext.configuration
def libraries = rootProject.ext.libraries
android {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    signingConfigs {
        release {
            keyAlias properties.getProperty("debug.keyalias")
            keyPassword properties.getProperty("debug.keypassword")
            storeFile file('C:/Android/Keystore/utils.jks')
            storePassword properties.getProperty("debug.storepassword")
        }
        debugConfig {
        }
    }
    compileSdkVersion configuration["compileVersion"]
    buildToolsVersion configuration["buildToolsVersion"]
    defaultConfig {
        applicationId "com.dyzs.app"
        minSdkVersion configuration["minSdkVersion"]
        targetSdkVersion configuration["targetSdkVersion"]
        versionCode configuration["versionCode"]
        versionName configuration["versionName"]
        manifestPlaceholders = [UMENG_CHANNEL_VALUE:"self",IN_VERSION:"0",VERSION_NAME:"1_0_1"]
        ndk {
            abiFilters "armeabi-v7a", "x86"//cpu的类型
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // signingConfig signingConfigs.release
            // build multi channel apk
            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        //
                        def fileName = "dyzs_utils_${variant.productFlavors[0].name}_${defaultConfig.versionName}.apk"
                        output.outputFileName = new File("release/", fileName)
                    }
                }
            }
        }
        debug {
        }
    }

    // add support lambda
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    /* 声明默认市场版本号 */
    flavorDimensions "default"
    productFlavors {
        market {
            dimension "default"
        }
        v0 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "v0", IN_VERSION: "0"]
        }
        yingyongbao_v1 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "yyb_v1", IN_VERSION: "1"]
        }
        googleplay_v2 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "gp_v2", IN_VERSION: "2"]
        }
        flyme_v3 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "flyme_v3", IN_VERSION: "3"]
        }
    }

    /*productFlavors {
        google {
            manifestPlaceholders = [CHANNEL_VALUE: "google"]
        }
        qh360 {
            manifestPlaceholders = [CHANNEL_VALUE: "360"]
        }
        baidu {
            manifestPlaceholders = [CHANNEL_VALUE: "baidu"]
        }
        self {
            manifestPlaceholders = [CHANNEL_VALUE: "self"]
        }
    }*/

    /*productFlavors {
        kuan {}
        xiaomi {}
        qh360 {}
        baidu {}
        wandoujia {}
    }

    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [CHANNEL_VALUE: name]
    }*/
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    repositories{
        flatDir{
            dirs 'libs'
        }
    }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    implementation libraries['appcompat-v7']
    implementation libraries['design']
    implementation libraries['support-v4']
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation project(':common')
    // ButterKnife
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    // OKHttp
    implementation 'com.squareup.okio:okio:1.14.0'
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    // retrofit & converter & retrofit adapter
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.1.0'
    // RxJava
    // implementation 'io.reactivex:rxjava:1.2.6'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.2'
    //RxAndroid
    implementation 'io.reactivex:rxandroid:1.2.1'
    // Umeng Analysis
    implementation 'com.umeng.sdk:common:latest.integration'
    implementation 'com.umeng.sdk:analytics:latest.integration'
    // LeakCanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    // RxPermission
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.5@aar'
    implementation 'com.jakewharton.rxbinding:rxbinding:0.4.0'
    implementation 'com.github.akarnokd:rxjava2-interop:0.8.0'
    // multi dex
    implementation "com.android.support:multidex:1.0.3"
    implementation(name:'testndk-release', ext:'aar')
    // life cycle
    implementation 'com.trello.rxlifecycle2:rxlifecycle:2.2.1'
    implementation 'com.trello.rxlifecycle2:rxlifecycle-android:2.2.1'
    implementation 'com.trello.rxlifecycle2:rxlifecycle-components:2.2.1'

    implementation 'androidx.biometric:biometric:1.2.0-alpha03'
}
